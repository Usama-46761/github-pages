
import tkinter as tk

def set_title(row,column):
    global curr_player
    
    if (game_over):
        return
    if board[row][column]['text'] != "":
        return
    
    board[row][column]['text'] = curr_player
    
    #switch player
    if curr_player == playerO:
        curr_player = playerX
    else:
        curr_player = playerO
    
    label['text'] = curr_player+'`s turn'
    
    check_winner()

def check_winner():
    global turn , game_over
    turn += 1
    for row in range(3):
        if (board[row][0]["text"]==board[row][1]["text"]==board[row][2]["text"]
            and board[row][0]["text"] != ""):
            label.config(text=board[row][0]["text"]+" is the winner!",foreground=yellow)
            for column in range(3):
                board[row][column].config(foreground=yellow,background=light_gray)
            game_over = True
            return
        
    for column in range(3):
        if (board[0][column]["text"] == board[1][column]["text"] == board[2][column]["text"]
            and board[0][column]["text"] != ""):
            label.config(text=board[0][column]["text"]+" is the winner!",foreground=yellow)
            for row in range(3):
                board[row][column].config(foreground=yellow, background=light_gray)
            game_over = True
            return
    # diagonally
    if (board[0][0]['text'] == board[1][1]["text"] == board[2][2]["text"]
        and board[0][0]["text"] != ""):
        label.config(text=board[0][0]["text"]+" is the winner!",foreground=yellow)
        for i in range(3):
            board[i][i].config(foreground=yellow,background=light_gray)
        game_over = True
        return
        
    # anti-diagonally
    if (board[0][2]['text'] == board[1][1]["text"] == board[2][0]["text"]
        and board[0][2]["text"] != ""):
        label.config(text=board[0][2]["text"]+" is the winner!",foreground=yellow)
        board[0][2].config(foreground=yellow, background=light_gray)
        board[1][1].config(foreground=yellow, background=light_gray)
        board[2][0].config(foreground=yellow, background=light_gray)
        game_over = True
        return
    #tie
    if (turn == 9):
        game_over=True
        label.config(text="tie!", foreground=yellow)
        
def new_game(): 
    global turn , game_over
    turn = 0
    game_over = False
    
    label.config(text=curr_player+"`s turn", foreground='white')
    
    for row in range(3):
        for column in range(3):
            board[row][column].config(text="", foreground=blue, background=gray)
playerX = 'X'
playerO = 'O'
curr_player = playerX
board = [[0,0,0],[0,0,0],[0,0,0]]
blue = '#4584b6'
yellow = '#ffde57'
gray = '#343434'
light_gray = '#646464'

turn = 0
game_over = False
#window setup
window = tk.Tk()    #create the game window
window.title('Tic Tac Toe')
window.resizable(False,False)

frame = tk.Frame(window)
label = tk.Label(frame, text=curr_player +"'s turn", font=('console',20),background=gray,
                 foreground='White')
label.grid(row=0,column=0, columnspan=3, sticky="we")
for row in range(3):
    for column in range(3):
        board[row][column] = tk.Button(frame,text="", font=('console',50,"bold"), background=gray,foreground=blue, width=4, height=1,
                                       command=lambda row=row, column=column : set_title(row, column))
        board[row][column].grid(row=row+1,column=column)

button = tk.Button(frame, text='restart', font=('console',20),background=gray, foreground='white',
                   command=new_game)

button.grid(row=4,column=0, columnspan=3 , sticky='we')

frame.pack()

# center the window
window.update()
window_width = window.winfo_width()
window_height = window.winfo_height()
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

winX = int((screen_width/2) - (window_width/2))
winY = int((window_height/2) - (window_height/2))

# format 
window.geometry(f'{window_width}x{window_height}+{winX}+{winY}')
window.mainloop()
